{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/how-to-make-a-blog-with-gatsby/","webpackCompilationHash":"ca26a6f632dcbade804f","result":{"data":{"site":{"siteMetadata":{"title":"Cynthia Dominguez","copyright":"© All rights reserved.","author":{"name":"Cynthia Dominguez","twitter":"cynthiadomingz"},"disqusShortname":"","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"45fbd544-6ba9-57d7-8b16-82487cbf22b8","html":"<p>When it came time to build my personal website with a blog, I knew I wanted it to meet a few key criteria:</p>\n<ul>\n<li><strong>Uncomplicated</strong></li>\n<li><strong>Good security</strong> (always relative, I know.)</li>\n<li><strong>Easy and free deployment</strong> (using GitHub Pages)</li>\n<li><strong>Fast loading</strong></li>\n<li><strong>Fun to update</strong></li>\n</ul>\n<p>I’d heard good things about Gatsby, a free and open source framework based on React. I hesitated because I’d had just a bit of practice with JavaScript and no experience with React. Nonetheless, once I got started it was relatively straightforward to begin with a template, do a bit of customization, and deploy using GitHub Pages.</p>\n<p>BONUS: If you haven’t mastered Markdown, yet, you absolutely will because all your blogs will be written in Markdown.</p>\n<p>Deploying was the only tricky part, given that I’d never deployed a React site, so I’ll go through just the set-up and deployment steps here. <br /></p>\n<h2>Environment</h2>\n<p>You’ll need Node.js (minimum version 8) so go ahead and run <code class=\"language-text\">brew update</code> to ensure you have the latest Homebrew version (for MacOS). Then install go ahead and follow installation for Node.js <br /></p>\n<p><code class=\"language-text\">brew install node</code> <br /></p>\n<p>If you don’t have the node package manager, go ahead and download that now or check that you have it: <br /></p>\n<p><code class=\"language-text\">npm --version</code> <br /></p>\n<p>Next, install gatsby: <br /></p>\n<p><code class=\"language-text\">$ npm install -g gatsby-cli</code> <br /></p>\n<p>Next, install gh-pages: <br /></p>\n<p><code class=\"language-text\">$ npm install gh-pages --save-dev</code> <br /></p>\n<h2>Deploy</h2>\n<p>You’ll want to choose a basic blog template or find one in the <a href=\"https://www.gatsbyjs.org/starters/?v=2\">starter gallery</a>. I used <a href=\"https://www.gatsbyjs.org/starters/GatsbyCentral/gatsby-v2-starter-lumen/\">gatsby-v2-starter-lumen</a>, since it had a couple more features available above the basic starter blog. Once you’ve installed your template locally, you’ll want to go to the <code class=\"language-text\">package.json</code> file and edit the following lines to reflect your deploy script to use gh-pages and your specific github info:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> &quot;scripts&quot;: {\n    &quot;develop&quot;: &quot;gatsby develop&quot;,\n    &quot;build&quot;: &quot;gatsby build&quot;,\n    &quot;clean:public&quot;: &quot;rm -rf public&quot;,\n    &quot;clean&quot;: &quot;npm run clean:public&quot;,\n    &quot;deploy&quot;: &quot;gatsby build &amp;&amp; gh-pages -d public&quot;\n  },\n  &quot;repository&quot;: &quot;git+https://github.com/&lt;your_github_username&gt;/&lt;repo_name_for_this_project&gt;&quot;,</code></pre></div>\n<p>When you’re ready to deploy, you’ll run this: <br /></p>\n<p><code class=\"language-text\">$ npm run deploy</code> <br /></p>\n<p>And you should see your site at <code class=\"language-text\">username.github.io</code> or use your own domain following the <a href=\"https://help.github.com/en/articles/managing-a-custom-domain-for-your-github-pages-site\">GitHub Pages custom domain documentation</a>.</p>\n<p><strong>And that’s it!</strong></p>\n<p>Honestly, this is the most effortless front-end development I’ve experienced. (Low bar alert: I’d previous coded in HTML and CSS using flex-boxes.) The most fun part about GatsbyJS is using <code class=\"language-text\">$ gatsby develop</code> and watching the instantaneous rendering in your browser at <code class=\"language-text\">localhost:8000</code>.</p>","fields":{"tagSlugs":["/tags/blog/","/tags/web-development/","/tags/gatsby/","/tags/react/","/tags/graph-ql/","/tags/markdown/","/tags/git-hub/"],"slug":"/posts/how-to-make-a-blog-with-gatsby/"},"frontmatter":{"title":"How to make a blog with Gatsby","tags":["Blog","Web Development","Gatsby","React","GraphQL","Markdown","GitHub"],"date":"2019-10-07T16:51:00.000Z","description":"Have fun making a static site with Gatsby."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/how-to-make-a-blog-with-gatsby/"}}}